#!/bin/bash

no_project() {
  [ -z "$PROJECT" ]
}

session_exists() {
  tmux list-sessions | sed -E 's/:.*$//' | grep -q "^$PROJECT$"
}

not_in_tmux() {
  [ -z "$TMUX" ]
}

preview() {
  cat << "  EOF"
    bat \
      --color=always \
      --style=plain \
      --line-range :500 \
      projects/{}/README.md \
      2> /dev/null \
    || ls projects/{}
  EOF
}

attach_to_project() {
  if no_project; then
    exit 1;
  fi
  cd ~/projects;
  cd $PROJECT;

  if not_in_tmux; then
    tmux new-session -As "$PROJECT";
  else
    if ! session_exists; then
      (TMUX='' tmux new-session -Ad -s "$PROJECT");
    fi
    tmux switch-client -t "$PROJECT";
  fi
}

subcommand_fzf() {
  PROJECT=$(ls ~/projects | fzf --preview="$(preview)" | tr . -);
  attach_to_project;
}

subcommand_new() {
  PROJECT=$1;
  mkdir -p ~/projects/$PROJECT;
  echo $PROJECT;
  attach_to_project;
}

project_status() {
  cd ~/projects/$1;
  SHORT_STATUS=$(git status -s 2>/dev/null);
  if [ "$SHORT_STATUS" ]; then
    echo $1
  fi
}

subcommand_status() {
  export -f project_status
  ls ~/projects | xargs -n 1 bash -c 'project_status "$0"'
}

subcommand_error() {
  echo "unknown subcommand";
  exit 1;
}

SUBCOMMMAND=$1

case "$SUBCOMMMAND" in
  ("")        subcommand_fzf       ;;
  ("new")     subcommand_new    $2 ;;
  ("status")  subcommand_status    ;;
  (*)         subcommand_error     ;;
esac
